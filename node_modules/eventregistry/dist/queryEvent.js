"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestEventSimilarEvents = exports.RequestEventArticleTrend = exports.RequestEventDateMentionAggr = exports.RequestEventSourceAggr = exports.RequestEventKeywordAggr = exports.RequestEventArticleUriWgts = exports.RequestEventArticles = exports.RequestEventInfo = exports.RequestEvent = exports.QueryEventArticlesIter = exports.QueryEvent = void 0;
var base_1 = require("./base");
var returnInfo_1 = require("./returnInfo");
var logger_1 = require("./logger");
/**
 * @class QueryEvent
 * Class for obtaining available info for one or more events in the Event Registry
 */
var QueryEvent = /** @class */ (function (_super) {
    __extends(QueryEvent, _super);
    /**
     * @param eventUriOrList A single event uri or a list of event uris (max 50)
     * @param requestedResult The information to return as the result of the query. By default return the details of the event
     */
    function QueryEvent(eventUriOrList, requestedResult) {
        if (requestedResult === void 0) { requestedResult = new RequestEventInfo(); }
        var _this = _super.call(this) || this;
        _this.setVal("eventUri", eventUriOrList);
        _this.setRequestedResult(requestedResult);
        return _this;
    }
    /**
     * Set the single result type that you would like to be returned. Any previously set result types will be overwritten.
     * Result types can be the classes that extend RequestEvent base class (see classes below).
     */
    QueryEvent.prototype.setRequestedResult = function (requestEvent) {
        if (!(requestEvent instanceof RequestEvent)) {
            throw Error("QueryEvent class can only accept result requests that are of type RequestEvent");
        }
        this.path = requestEvent.path;
        this.resultTypeList = [requestEvent];
    };
    return QueryEvent;
}(base_1.Query));
exports.QueryEvent = QueryEvent;
/**
 * @class QueryEventArticlesIter
 * Class for iterating through all the articles in the event via callbacks
 */
var QueryEventArticlesIter = /** @class */ (function (_super) {
    __extends(QueryEventArticlesIter, _super);
    /**
     * @param er instance of EventRegistry class. used to obtain the necessary data
     * @param eventUri a single event for which we want to obtain the list of articles in it
     * @param args Object which contains a host of optional parameters
     */
    function QueryEventArticlesIter(er, eventUri, args) {
        if (args === void 0) { args = {}; }
        var _this = _super.call(this, eventUri) || this;
        _this.page = 0;
        _this.pages = 1;
        _this.items = [];
        _this.returnedSoFar = 0;
        _this.index = 0;
        _this.callback = function () { return undefined; };
        _this.doneCallback = function () { return undefined; };
        var _a = args.lang, lang = _a === void 0 ? undefined : _a, _b = args.sortBy, sortBy = _b === void 0 ? "cosSim" : _b, _c = args.sortByAsc, sortByAsc = _c === void 0 ? false : _c, _d = args.returnInfo, returnInfo = _d === void 0 ? undefined : _d, _e = args.maxItems, maxItems = _e === void 0 ? -1 : _e, _f = args.keywords, keywords = _f === void 0 ? undefined : _f, _g = args.conceptUri, conceptUri = _g === void 0 ? undefined : _g, _h = args.categoryUri, categoryUri = _h === void 0 ? undefined : _h, _j = args.sourceUri, sourceUri = _j === void 0 ? undefined : _j, _k = args.sourceLocationUri, sourceLocationUri = _k === void 0 ? undefined : _k, _l = args.sourceGroupUri, sourceGroupUri = _l === void 0 ? undefined : _l, _m = args.authorUri, authorUri = _m === void 0 ? undefined : _m, _o = args.locationUri, locationUri = _o === void 0 ? undefined : _o, _p = args.dateStart, dateStart = _p === void 0 ? undefined : _p, _q = args.dateEnd, dateEnd = _q === void 0 ? undefined : _q, _r = args.dateMentionStart, dateMentionStart = _r === void 0 ? undefined : _r, _s = args.dateMentionEnd, dateMentionEnd = _s === void 0 ? undefined : _s, _t = args.keywordsLoc, keywordsLoc = _t === void 0 ? "body" : _t, _u = args.keywordSearchMode, keywordSearchMode = _u === void 0 ? "phrase" : _u, // "simple", "exact", "phrase"]
        _v = args.startSourceRankPercentile, // "simple", "exact", "phrase"]
        startSourceRankPercentile = _v === void 0 ? 0 : _v, _w = args.endSourceRankPercentile, endSourceRankPercentile = _w === void 0 ? 100 : _w, _x = args.minSentiment, minSentiment = _x === void 0 ? -1 : _x, _y = args.maxSentiment, maxSentiment = _y === void 0 ? 1 : _y;
        _this.er = er;
        _this.sortBy = sortBy;
        _this.sortByAsc = sortByAsc;
        _this.returnInfo = returnInfo;
        _this.maxItems = maxItems;
        _this.eventUri = eventUri;
        _this.setQueryArrVal(keywords, "keyword", "keywordOper", "and");
        _this.setQueryArrVal(conceptUri, "conceptUri", "conceptOper", "and");
        _this.setQueryArrVal(categoryUri, "categoryUri", "categoryOper", "or");
        _this.setQueryArrVal(sourceUri, "sourceUri", "sourceOper", "or");
        _this.setQueryArrVal(sourceLocationUri, "sourceLocationUri", undefined, "or");
        _this.setQueryArrVal(sourceGroupUri, "sourceGroupUri", "sourceGroupOper", "or");
        _this.setQueryArrVal(authorUri, "authorUri", "authorOper", "or");
        _this.setQueryArrVal(locationUri, "locationUri", undefined, "or");
        _this.setQueryArrVal(lang, "lang", undefined, "or");
        if (dateStart !== undefined) {
            _this.setDateVal("dateStart", dateStart);
        }
        if (dateEnd !== undefined) {
            _this.setDateVal("dateEnd", dateEnd);
        }
        if (dateMentionStart !== undefined) {
            _this.setDateVal("dateMentionStart", dateMentionStart);
        }
        if (dateMentionEnd !== undefined) {
            _this.setDateVal("dateMentionEnd", dateMentionEnd);
        }
        _this.setValIfNotDefault("keywordLoc", keywordsLoc, "body");
        _this.setValIfNotDefault("keywordSearchMode", keywordSearchMode, "phrase");
        if (startSourceRankPercentile < 0 || startSourceRankPercentile % 10 !== 0 || startSourceRankPercentile > 100) {
            throw new Error("StartSourceRankPercentile: Value should be in range 0-90 and divisible by 10.");
        }
        if (endSourceRankPercentile < 0 || endSourceRankPercentile % 10 !== 0 || endSourceRankPercentile > 100) {
            throw new Error("EndSourceRankPercentile: Value should be in range 0-90 and divisible by 10.");
        }
        if (startSourceRankPercentile > endSourceRankPercentile) {
            throw new Error("SourceRankPercentile: startSourceRankPercentile should be less than endSourceRankPercentile");
        }
        if (startSourceRankPercentile !== 0) {
            _this.setVal("startSourceRankPercentile", startSourceRankPercentile);
        }
        if (endSourceRankPercentile !== 100) {
            _this.setVal("endSourceRankPercentile", endSourceRankPercentile);
        }
        if (minSentiment > -1 && minSentiment <= 1) {
            _this.setVal("minSentiment", minSentiment);
        }
        if (maxSentiment >= -1 && maxSentiment < 1) {
            _this.setVal("maxSentiment", maxSentiment);
        }
        return _this;
    }
    /**
     * Async Iterator function that returns the next item in the list of articles
     */
    QueryEventArticlesIter.prototype[Symbol.asyncIterator] = function () {
        var _this = this;
        return {
            next: function () { return __awaiter(_this, void 0, void 0, function () {
                var item;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!(this.index >= this.items.length)) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.getNextBatch()];
                        case 1:
                            _a.sent();
                            _a.label = 2;
                        case 2:
                            item = this.items[this.index];
                            this.index++;
                            return [2 /*return*/, { value: item, done: !item }];
                    }
                });
            }); },
        };
    };
    QueryEventArticlesIter.prototype.count = function () {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            var _a, _b, _c, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        this.setRequestedResult(new RequestEventArticles(this.getQueryParams()));
                        return [4 /*yield*/, this.er.execQuery(this)];
                    case 1:
                        response = _e.sent();
                        if (!!(response === null || response === void 0 ? void 0 : response.error)) {
                            this.er.logger.error((_a = response === null || response === void 0 ? void 0 : response.error) !== null && _a !== void 0 ? _a : "Error while obtaining a list of articles");
                        }
                        return [2 /*return*/, (_d = (_c = (_b = response[this.eventUri]) === null || _b === void 0 ? void 0 : _b.articles) === null || _c === void 0 ? void 0 : _c.totalResults) !== null && _d !== void 0 ? _d : 0];
                }
            });
        });
    };
    /**
     * Execute query and fetch batches of articles of the specified size (articleBatchSize)
     * @param callback callback function that'll be called every time we get a new batch of articles from the backend
     * @param doneCallback callback function that'll be called when everything is complete
     */
    QueryEventArticlesIter.prototype.execQuery = function (callback, doneCallback) {
        if (callback) {
            this.callback = callback;
        }
        if (doneCallback) {
            this.doneCallback = doneCallback;
        }
        this.iterate();
    };
    QueryEventArticlesIter.prototype.iterate = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.current) return [3 /*break*/, 1];
                        this.callback(this.current);
                        this.index += 1;
                        return [3 /*break*/, 3];
                    case 1: return [4 /*yield*/, this.getNextBatch()];
                    case 2:
                        if (!(_a.sent())) {
                            this.doneCallback(this.errorMessage);
                            return [2 /*return*/];
                        }
                        _a.label = 3;
                    case 3: return [2 /*return*/, this.iterate()];
                }
            });
        });
    };
    /**
     * Extract the results according to maxItems
     * @param response response from the backend
     */
    QueryEventArticlesIter.prototype.extractResults = function (response) {
        var _a, _b;
        var results = ((_b = (_a = response[this.eventUri]) === null || _a === void 0 ? void 0 : _a.articles) === null || _b === void 0 ? void 0 : _b.results) || [];
        var extractedSize = this.maxItems !== -1 ? this.maxItems - this.returnedSoFar : results.length;
        var extractedResults = results.slice(0, extractedSize);
        return extractedResults.filter(Boolean);
    };
    Object.defineProperty(QueryEventArticlesIter.prototype, "current", {
        get: function () {
            return this.items[this.index] || undefined;
        },
        enumerable: false,
        configurable: true
    });
    QueryEventArticlesIter.prototype.getNextBatch = function () {
        return __awaiter(this, void 0, void 0, function () {
            var response, error, results, error_1;
            var _a, _b, _c, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        _e.trys.push([0, 2, , 3]);
                        this.page += 1;
                        if (this.page > this.pages || (this.maxItems !== -1 && this.returnedSoFar >= this.maxItems)) {
                            return [2 /*return*/, false];
                        }
                        this.setRequestedResult(new RequestEventArticles(__assign({ page: this.page, sortBy: this.sortBy, sortByAsc: this.sortByAsc, returnInfo: this.returnInfo }, this.getQueryParams())));
                        if (this.er.verboseOutput) {
                            this.er.logger.info("Downloading page ".concat(this.page, "..."));
                        }
                        return [4 /*yield*/, this.er.execQuery(this, this.er.allowUseOfArchive)];
                    case 1:
                        response = _e.sent();
                        error = ((_a = response[this.eventUri]) === null || _a === void 0 ? void 0 : _a.error) || "";
                        if (error) {
                            this.errorMessage = "Error while obtaining a list of articles:  ".concat((_b = response[this.eventUri]) === null || _b === void 0 ? void 0 : _b.error);
                        }
                        else {
                            this.pages = ((_d = (_c = response[this.eventUri]) === null || _c === void 0 ? void 0 : _c.articles) === null || _d === void 0 ? void 0 : _d.pages) || 0;
                        }
                        results = this.extractResults(response);
                        this.returnedSoFar += results.length;
                        this.items = __spreadArray(__spreadArray([], __read(this.items), false), __read(results), false);
                        return [2 /*return*/, true];
                    case 2:
                        error_1 = _e.sent();
                        this.er.logger.error(error_1);
                        return [2 /*return*/, false];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    return QueryEventArticlesIter;
}(QueryEvent));
exports.QueryEventArticlesIter = QueryEventArticlesIter;
var RequestEvent = /** @class */ (function (_super) {
    __extends(RequestEvent, _super);
    function RequestEvent() {
        var _this = _super.apply(this, __spreadArray([], __read(arguments), false)) || this;
        _this.path = "/api/v1/event/getEvent";
        return _this;
    }
    return RequestEvent;
}(base_1.QueryParamsBase));
exports.RequestEvent = RequestEvent;
/**
 * @class RequestEventInfo
 * Return details about an event
 */
var RequestEventInfo = /** @class */ (function (_super) {
    __extends(RequestEventInfo, _super);
    function RequestEventInfo(returnInfo) {
        if (returnInfo === void 0) { returnInfo = new returnInfo_1.ReturnInfo(); }
        var _this = _super.call(this) || this;
        _this.resultType = "info";
        _this.params = returnInfo.getParams("info");
        return _this;
    }
    return RequestEventInfo;
}(RequestEvent));
exports.RequestEventInfo = RequestEventInfo;
/**
 * @class RequestEventArticles
 * Return articles about the event
 */
var RequestEventArticles = /** @class */ (function (_super) {
    __extends(RequestEventArticles, _super);
    function RequestEventArticles(args) {
        if (args === void 0) { args = {}; }
        var _this = _super.call(this) || this;
        _this.resultType = "articles";
        var _a = args.page, page = _a === void 0 ? 1 : _a, _b = args.count, count = _b === void 0 ? 100 : _b, _c = args.lang, lang = _c === void 0 ? undefined : _c, _d = args.keywords, keywords = _d === void 0 ? undefined : _d, _e = args.conceptUri, conceptUri = _e === void 0 ? undefined : _e, _f = args.categoryUri, categoryUri = _f === void 0 ? undefined : _f, _g = args.sourceUri, sourceUri = _g === void 0 ? undefined : _g, _h = args.sourceLocationUri, sourceLocationUri = _h === void 0 ? undefined : _h, _j = args.sourceGroupUri, sourceGroupUri = _j === void 0 ? undefined : _j, _k = args.authorUri, authorUri = _k === void 0 ? undefined : _k, _l = args.locationUri, locationUri = _l === void 0 ? undefined : _l, _m = args.dateStart, dateStart = _m === void 0 ? undefined : _m, _o = args.dateEnd, dateEnd = _o === void 0 ? undefined : _o, _p = args.dateMentionStart, dateMentionStart = _p === void 0 ? undefined : _p, _q = args.dateMentionEnd, dateMentionEnd = _q === void 0 ? undefined : _q, _r = args.keywordsLoc, keywordsLoc = _r === void 0 ? "body" : _r, _s = args.startSourceRankPercentile, startSourceRankPercentile = _s === void 0 ? 0 : _s, _t = args.endSourceRankPercentile, endSourceRankPercentile = _t === void 0 ? 100 : _t, _u = args.sortBy, sortBy = _u === void 0 ? "cosSim" : _u, _v = args.sortByAsc, sortByAsc = _v === void 0 ? false : _v, _w = args.returnInfo, returnInfo = _w === void 0 ? undefined : _w;
        if (page < 1) {
            throw new RangeError("Page has to be >= 1");
        }
        if (count > 100) {
            throw new RangeError("At most 100 articles can be returned per call");
        }
        _this.params = {};
        _this.params["articlesPage"] = page;
        _this.params["articlesCount"] = count;
        _this.params["articlesSortBy"] = sortBy;
        _this.params["articlesSortByAsc"] = sortByAsc;
        _this.setQueryArrVal(keywords, "keyword", "keywordOper", "and");
        _this.setQueryArrVal(conceptUri, "conceptUri", "conceptOper", "and");
        _this.setQueryArrVal(categoryUri, "categoryUri", "categoryOper", "or");
        _this.setQueryArrVal(sourceUri, "sourceUri", "sourceOper", "or");
        _this.setQueryArrVal(sourceLocationUri, "sourceLocationUri", undefined, "or");
        _this.setQueryArrVal(sourceGroupUri, "sourceGroupUri", "sourceGroupOper", "or");
        _this.setQueryArrVal(authorUri, "authorUri", "authorOper", "or");
        _this.setQueryArrVal(locationUri, "locationUri", undefined, "or");
        _this.setQueryArrVal(lang, "articlesLang", undefined, "or");
        if (dateStart !== undefined) {
            _this.setDateVal("dateStart", dateStart);
        }
        if (dateEnd !== undefined) {
            _this.setDateVal("dateEnd", dateEnd);
        }
        if (dateMentionStart !== undefined) {
            _this.setDateVal("dateMentionStart", dateMentionStart);
        }
        if (dateMentionEnd !== undefined) {
            _this.setDateVal("dateMentionEnd", dateMentionEnd);
        }
        _this.setValIfNotDefault("keywordLoc", keywordsLoc, "body");
        if (startSourceRankPercentile < 0 || startSourceRankPercentile % 10 !== 0 || startSourceRankPercentile > 100) {
            throw new Error("StartSourceRankPercentile: Value should be in range 0-90 and divisible by 10.");
        }
        if (endSourceRankPercentile < 0 || endSourceRankPercentile % 10 !== 0 || endSourceRankPercentile > 100) {
            throw new Error("EndSourceRankPercentile: Value should be in range 0-90 and divisible by 10.");
        }
        if (startSourceRankPercentile > endSourceRankPercentile) {
            throw new Error("SourceRankPercentile: startSourceRankPercentile should be less than endSourceRankPercentile");
        }
        if (startSourceRankPercentile !== 0) {
            _this.setVal("startSourceRankPercentile", startSourceRankPercentile);
        }
        if (endSourceRankPercentile !== 100) {
            _this.setVal("endSourceRankPercentile", endSourceRankPercentile);
        }
        if (returnInfo) {
            _this.params = __assign(__assign(__assign({}, _this.params), _this.getQueryParams()), returnInfo.getParams("articles"));
        }
        return _this;
    }
    return RequestEventArticles;
}(RequestEvent));
exports.RequestEventArticles = RequestEventArticles;
/**
 * @class RequestEventArticleUriWgts
 * Return just a list of article uris
 */
var RequestEventArticleUriWgts = /** @class */ (function (_super) {
    __extends(RequestEventArticleUriWgts, _super);
    function RequestEventArticleUriWgts(args) {
        if (args === void 0) { args = {}; }
        var _this = _super.call(this) || this;
        _this.resultType = "uriWgtList";
        var _a = args.lang, lang = _a === void 0 ? undefined : _a, _b = args.sortBy, sortBy = _b === void 0 ? "cosSim" : _b, _c = args.sortByAsc, sortByAsc = _c === void 0 ? false : _c, unsupported = __rest(args, ["lang", "sortBy", "sortByAsc"]);
        if (Object.keys(unsupported).length > 0) {
            logger_1.Logger.warn("RequestEventArticleUriWgts: Unsupported parameters detected: ".concat(JSON.stringify(unsupported), ". Please check the documentation."));
        }
        _this.params = {};
        if (lang !== undefined) {
            _this.params["articlesLang"] = lang;
        }
        _this.params["uriWgtListSortBy"] = sortBy;
        _this.params["uriWgtListSortByAsc"] = sortByAsc;
        return _this;
    }
    return RequestEventArticleUriWgts;
}(RequestEvent));
exports.RequestEventArticleUriWgts = RequestEventArticleUriWgts;
/**
 * @class RequestEventKeywordAggr
 * Return keyword aggregate (tag-cloud) from articles in the event.
 */
var RequestEventKeywordAggr = /** @class */ (function (_super) {
    __extends(RequestEventKeywordAggr, _super);
    /**
     * @param lang: language for which to compute the keywords
     */
    function RequestEventKeywordAggr(lang) {
        if (lang === void 0) { lang = "eng"; }
        var _this = _super.call(this) || this;
        _this.resultType = "keywordAggr";
        _this.params = {};
        _this.params["articlesLang"] = lang;
        return _this;
    }
    return RequestEventKeywordAggr;
}(RequestEvent));
exports.RequestEventKeywordAggr = RequestEventKeywordAggr;
/**
 * @class RequestEventSourceAggr
 * Get news source distribution of articles in the event.
 */
var RequestEventSourceAggr = /** @class */ (function (_super) {
    __extends(RequestEventSourceAggr, _super);
    function RequestEventSourceAggr() {
        var _this = _super.apply(this, __spreadArray([], __read(arguments), false)) || this;
        _this.resultType = "sourceExAggr";
        return _this;
    }
    return RequestEventSourceAggr;
}(RequestEvent));
exports.RequestEventSourceAggr = RequestEventSourceAggr;
/**
 * @class RequestEventDateMentionAggr
 * Get dates that we found mentioned in the event articles and their frequencies.
 */
var RequestEventDateMentionAggr = /** @class */ (function (_super) {
    __extends(RequestEventDateMentionAggr, _super);
    function RequestEventDateMentionAggr() {
        var _this = _super.apply(this, __spreadArray([], __read(arguments), false)) || this;
        _this.resultType = "dateMentionAggr";
        return _this;
    }
    return RequestEventDateMentionAggr;
}(RequestEvent));
exports.RequestEventDateMentionAggr = RequestEventDateMentionAggr;
/**
 * @class RequestEventArticleTrend
 * Return trending information for the articles about the event.
 */
var RequestEventArticleTrend = /** @class */ (function (_super) {
    __extends(RequestEventArticleTrend, _super);
    function RequestEventArticleTrend(args) {
        if (args === void 0) { args = {}; }
        var _this = _super.call(this) || this;
        _this.resultType = "articleTrend";
        var _a = args.lang, lang = _a === void 0 ? undefined : _a, _b = args.page, page = _b === void 0 ? 1 : _b, _c = args.count, count = _c === void 0 ? 100 : _c, _d = args.minArticleCosSim, minArticleCosSim = _d === void 0 ? -1 : _d, _e = args.returnInfo, returnInfo = _e === void 0 ? new returnInfo_1.ReturnInfo({ articleInfo: new returnInfo_1.ArticleInfoFlags({ bodyLen: 0 }) }) : _e, unsupported = __rest(args, ["lang", "page", "count", "minArticleCosSim", "returnInfo"]);
        if (Object.keys(unsupported).length > 0) {
            logger_1.Logger.warn("RequestEventArticleTrend: Unsupported parameters detected: ".concat(JSON.stringify(unsupported), ". Please check the documentation."));
        }
        if (page < 1) {
            throw new RangeError("Page has to be >= 1");
        }
        if (count > 100) {
            throw new RangeError("At most 100 articles can be returned per call");
        }
        _this.params = {};
        _this.params["articlesLang"] = lang;
        _this.params["articleTrendPage"] = page;
        _this.params["articleTrendCount"] = count;
        _this.params["articleTrendMinArticleCosSim"] = minArticleCosSim;
        _this.params = __assign(__assign({}, _this.params), returnInfo.getParams("articleTrend"));
        return _this;
    }
    return RequestEventArticleTrend;
}(RequestEvent));
exports.RequestEventArticleTrend = RequestEventArticleTrend;
/**
 * @class RequestEventSimilarEvents
 * Compute and return a list of similar events.
 */
var RequestEventSimilarEvents = /** @class */ (function (_super) {
    __extends(RequestEventSimilarEvents, _super);
    function RequestEventSimilarEvents(args) {
        if (args === void 0) { args = {}; }
        var _this = _super.call(this) || this;
        _this.path = "/api/v1/event/getSimilarEvents";
        var conceptInfoList = args.conceptInfoList, _a = args.count, count = _a === void 0 ? 50 : _a, _b = args.dateStart, dateStart = _b === void 0 ? undefined : _b, _c = args.dateEnd, dateEnd = _c === void 0 ? undefined : _c, _d = args.addArticleTrendInfo, addArticleTrendInfo = _d === void 0 ? false : _d, _e = args.aggrHours, aggrHours = _e === void 0 ? 6 : _e, _f = args.returnInfo, returnInfo = _f === void 0 ? new returnInfo_1.ReturnInfo() : _f, unsupported = __rest(args, ["conceptInfoList", "count", "dateStart", "dateEnd", "addArticleTrendInfo", "aggrHours", "returnInfo"]);
        if (Object.keys(unsupported).length > 0) {
            logger_1.Logger.warn("RequestEventSimilarEvents: Unsupported parameters detected: ".concat(JSON.stringify(unsupported), ". Please check the documentation."));
        }
        if (count > 50) {
            throw new RangeError("At most 50 similar events can be returned per call");
        }
        if (!Array.isArray(conceptInfoList)) {
            throw new Error("Concept info list is not an array");
        }
        _this.params = {};
        _this.params["action"] = "getSimilarEvents";
        _this.params["concepts"] = JSON.stringify(conceptInfoList);
        // Potential problem, verify that output corresponds the REST API docs.
        _this.params["eventsCount"] = count;
        if (dateStart) {
            _this.params["dateStart"] = base_1.QueryParamsBase.encodeDateTime(dateStart, "YYYY-MM-DD");
        }
        if (dateEnd) {
            _this.params["dateEnd"] = base_1.QueryParamsBase.encodeDateTime(dateEnd, "YYYY-MM-DD");
        }
        _this.params["addArticleTrendInfo"] = addArticleTrendInfo;
        _this.params["aggrHours"] = aggrHours;
        _this.params["resultType"] = "similarEvents";
        _this.params = __assign(__assign({}, _this.params), returnInfo.getParams());
        return _this;
    }
    return RequestEventSimilarEvents;
}(RequestEvent));
exports.RequestEventSimilarEvents = RequestEventSimilarEvents;
//# sourceMappingURL=queryEvent.js.map