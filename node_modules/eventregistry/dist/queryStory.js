"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestStorySimilarStories = exports.RequestStoryArticleTrend = exports.RequestStoryArticleUris = exports.RequestStoryArticles = exports.RequestStoryInfo = exports.RequestStory = exports.QueryStory = void 0;
var base_1 = require("./base");
var returnInfo_1 = require("./returnInfo");
var logger_1 = require("./logger");
var QueryStory = /** @class */ (function (_super) {
    __extends(QueryStory, _super);
    function QueryStory(storyUriOrList) {
        var _this = _super.call(this) || this;
        _this.setVal("action", "getStory");
        _this.queryByUri(storyUriOrList);
        return _this;
    }
    Object.defineProperty(QueryStory.prototype, "path", {
        get: function () {
            return "/api/v1/story";
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Search stories by their uri(s)
     */
    QueryStory.prototype.queryByUri = function (uriOrUriList) {
        this.setVal("storyUri", uriOrUriList);
    };
    QueryStory.prototype.setRequestedResult = function (requestStory) {
        if (!(requestStory instanceof RequestStory)) {
            throw Error("QueryStory class can only accept result requests that are of type RequestStory");
        }
        this.resultTypeList = [requestStory];
    };
    return QueryStory;
}(base_1.Query));
exports.QueryStory = QueryStory;
var RequestStory = /** @class */ (function () {
    function RequestStory() {
    }
    return RequestStory;
}());
exports.RequestStory = RequestStory;
var RequestStoryInfo = /** @class */ (function (_super) {
    __extends(RequestStoryInfo, _super);
    function RequestStoryInfo(returnInfo) {
        if (returnInfo === void 0) { returnInfo = new returnInfo_1.ReturnInfo(); }
        var _this = _super.call(this) || this;
        _this.resultType = "info";
        _this.params = returnInfo.getParams("info");
        return _this;
    }
    return RequestStoryInfo;
}(RequestStory));
exports.RequestStoryInfo = RequestStoryInfo;
var RequestStoryArticles = /** @class */ (function (_super) {
    __extends(RequestStoryArticles, _super);
    function RequestStoryArticles(_a) {
        if (_a === void 0) { _a = {}; }
        var _this = this;
        var _b = _a.page, page = _b === void 0 ? 1 : _b, _c = _a.count, count = _c === void 0 ? 100 : _c, _d = _a.sortBy, sortBy = _d === void 0 ? "cosSim" : _d, _e = _a.sortByAsc, sortByAsc = _e === void 0 ? false : _e, _f = _a.returnInfo, returnInfo = _f === void 0 ? new returnInfo_1.ReturnInfo({ articleInfo: new returnInfo_1.ArticleInfoFlags({ bodyLen: 200 }) }) : _f, unsupported = __rest(_a, ["page", "count", "sortBy", "sortByAsc", "returnInfo"]);
        _this = _super.call(this) || this;
        _this.resultType = "articles";
        if (Object.keys(unsupported).length > 0) {
            logger_1.Logger.warn("RequestStoryArticles: Unsupported parameters detected: ".concat(JSON.stringify(unsupported), ". Please check the documentation."));
        }
        if (page < 1) {
            throw new RangeError("Page has to be >= 1");
        }
        if (count > 100) {
            throw new RangeError("At most 100 articles can be returned per call");
        }
        _this.params = {};
        _this.params["articlesPage"] = page;
        _this.params["articlesCount"] = count;
        _this.params["articlesSortBy"] = sortBy;
        _this.params["articlesSortByAsc"] = sortByAsc;
        _this.params = __assign(__assign({}, _this.params), returnInfo.getParams("articles"));
        return _this;
    }
    return RequestStoryArticles;
}(RequestStory));
exports.RequestStoryArticles = RequestStoryArticles;
var RequestStoryArticleUris = /** @class */ (function (_super) {
    __extends(RequestStoryArticleUris, _super);
    function RequestStoryArticleUris(_a) {
        if (_a === void 0) { _a = {}; }
        var _this = this;
        var _b = _a.sortBy, sortBy = _b === void 0 ? "cosSim" : _b, _c = _a.sortByAsc, sortByAsc = _c === void 0 ? false : _c, unsupported = __rest(_a, ["sortBy", "sortByAsc"]);
        _this = _super.call(this) || this;
        _this.resultType = "articleUris";
        if (Object.keys(unsupported).length > 0) {
            logger_1.Logger.warn("RequestStoryArticleUris: Unsupported parameters detected: ".concat(JSON.stringify(unsupported), ". Please check the documentation."));
        }
        _this.params = {};
        _this.params["articleUrisSortBy"] = sortBy;
        _this.params["articleUrisSortByAsc"] = sortByAsc;
        return _this;
    }
    return RequestStoryArticleUris;
}(RequestStory));
exports.RequestStoryArticleUris = RequestStoryArticleUris;
var RequestStoryArticleTrend = /** @class */ (function (_super) {
    __extends(RequestStoryArticleTrend, _super);
    function RequestStoryArticleTrend(_a) {
        if (_a === void 0) { _a = {}; }
        var _this = this;
        var _b = _a.lang, lang = _b === void 0 ? base_1.mainLangs : _b, _c = _a.minArticleCosSim, minArticleCosSim = _c === void 0 ? -1 : _c, _d = _a.returnInfo, returnInfo = _d === void 0 ? new returnInfo_1.ReturnInfo({ articleInfo: new returnInfo_1.ArticleInfoFlags({ bodyLen: 0 }) }) : _d, unsupported = __rest(_a, ["lang", "minArticleCosSim", "returnInfo"]);
        _this = _super.call(this) || this;
        _this.resultType = "articleTrend";
        if (Object.keys(unsupported).length > 0) {
            logger_1.Logger.warn("RequestStoryArticleTrend: Unsupported parameters detected: ".concat(JSON.stringify(unsupported), ". Please check the documentation."));
        }
        _this.params = {};
        _this.params["articleTrendLang"] = lang;
        _this.params["articleTrendMinArticleCosSim"] = minArticleCosSim;
        _this.params = __assign(__assign({}, _this.params), returnInfo.getParams("articles"));
        return _this;
    }
    return RequestStoryArticleTrend;
}(RequestStory));
exports.RequestStoryArticleTrend = RequestStoryArticleTrend;
var RequestStorySimilarStories = /** @class */ (function (_super) {
    __extends(RequestStorySimilarStories, _super);
    function RequestStorySimilarStories(_a) {
        if (_a === void 0) { _a = {}; }
        var _this = this;
        var _b = _a.conceptInfoList, conceptInfoList = _b === void 0 ? undefined : _b, _c = _a.count, count = _c === void 0 ? 50 : _c, _d = _a.dateStart, dateStart = _d === void 0 ? undefined : _d, _e = _a.dateEnd, dateEnd = _e === void 0 ? undefined : _e, _f = _a.lang, lang = _f === void 0 ? [] : _f, _g = _a.returnInfo, returnInfo = _g === void 0 ? new returnInfo_1.ReturnInfo() : _g, unsupported = __rest(_a, ["conceptInfoList", "count", "dateStart", "dateEnd", "lang", "returnInfo"]);
        _this = _super.call(this) || this;
        _this.resultType = "similarStories";
        if (Object.keys(unsupported).length > 0) {
            logger_1.Logger.warn("RequestStorySimilarStories: Unsupported parameters detected: ".concat(JSON.stringify(unsupported), ". Please check the documentation."));
        }
        if (count > 50) {
            throw new RangeError("At most 50 stories can be returned per call");
        }
        if (!Array.isArray(conceptInfoList)) {
            throw new Error("Concept list is not an array!");
        }
        _this.params = {};
        _this.params["action"] = "getSimilarStories";
        _this.params["concepts"] = JSON.stringify(conceptInfoList);
        _this.params["storiesCount"] = count;
        if (!!dateStart) {
            _this.params["dateStart"] = base_1.QueryParamsBase.encodeDateTime(dateStart, "YYYY-MM-DD");
        }
        if (!!dateEnd) {
            _this.params["dateEnd"] = base_1.QueryParamsBase.encodeDateTime(dateEnd, "YYYY-MM-DD");
        }
        if (lang.length > 0) {
            _this.params["lang"] = lang;
        }
        _this.params = __assign(__assign({}, _this.params), returnInfo.getParams("similarStories"));
        return _this;
    }
    return RequestStorySimilarStories;
}(RequestStory));
exports.RequestStorySimilarStories = RequestStorySimilarStories;
//# sourceMappingURL=queryStory.js.map